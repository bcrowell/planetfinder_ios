#!/usr/bin/perl
#
#
# This is a super-hacky script to generate entry points from glext.h.
# I apologize to all those who are offended by the quality of this code.
# Cass Everitt
#
#

use FileHandle;

if ( scalar( $ARGV ) != 1 ) {
   print "\nusage: <glext.h_file>\n";
}

my $glext = new FileHandle;
$glext->open( "<$ARGV[0]" );

open( GLEXT, "<$ARGV[0]" );


my %entries;

my $line;
while( $line = <GLEXT> ) {

  if ( $line =~ /GLAPI (.*) APIENTRY (gl[A-Za-z0-9]+)\s*(\(.*\))/ ) {
      my $returnType = $1;
      my $entryPoint = $2;
      my $args = $3;
      my %h;
      $h{ "entry" } = $entryPoint;
      $h{ "return" } = $returnType;
      $h{ "args" } = $args;
      $entries{ $entryPoint } = { "entry" => $entryPoint, "return" => $returnType, "args" => $args };
  }

}

$glext->close();

write_header();
write_source();


sub write_disclaimer($) {
	my $fp = shift;

	print $fp "// Generated by glext_entry.pl, modify at your own peril.\n"; 
	print $fp "// Cass Everitt\n\n";   

}


sub write_header {
	my $fp  = new FileHandle;
	$fp->open( ">_entry.h" );

	write_disclaimer( $fp );

	print $fp "#ifndef __R3_GL_ENTRY_H__\n";
	print $fp "#define __R3_GL_ENTRY_H__\n";

	print $fp "\n\n";
	print $fp "#if _WIN32\n\n";
	print $fp "#include \"glext.h\"\n\n";

	print $fp "namespace r3 {\n\n";
	
	foreach my $e ( sort keys %entries ) {
		my $ue = uc( $e );
		print $fp "    extern PFN" . $ue . "PROC $e;\n";
	}
	print $fp "\n\n";
	print $fp "    void InitGLEntry();\n\n";
	print $fp "\n}\n\n";

	print $fp "\n\n";
	print $fp "#endif // _WIN32\n\n";
	print $fp "#endif // __R3_GL_ENTRY_H__\n\n";
	
	close ( $fp );

}


sub write_source {
	my $fp  = new FileHandle;
	$fp->open( ">_entry.cpp" );

	write_disclaimer( $fp );

	print $fp "\n\n";
	print $fp "#if _WIN32\n\n";
	print $fp "#include <windows.h>\n";
	print $fp "#include <GL/gl.h>\n";
	print $fp "#include \"entry.h\"\n\n";

	print $fp "namespace r3 {\n\n";
	
	foreach my $e ( sort keys %entries ) {
		my $ue = uc( $e );
		print $fp "    PFN" . $ue . "PROC $e;\n";
	}

	print $fp "\n\n";
	print $fp "    void InitGLEntry() {\n\n";
	foreach my $e ( sort keys %entries ) {
		my $ue = uc( $e );
		print $fp "        $e = (PFN" . $ue . "PROC) wglGetProcAddress( \"$e\" );\n";
	}
	print $fp "\n    }\n\n";

	print $fp "\n}\n\n";

	print $fp "\n\n";
	print $fp "#endif // _WIN32\n\n";
	
	close ( $fp );

}




